{
    "content": [
        {
            "heading": "Journal Entry"
        },
        {
            "paragraph": "Date: July 6, 2024  ------- 3:27 am------"
        },
        {
            "paragraph": "Summary:\nToday, I focused on getting the original files in my TradingRobotPlug project to work correctly. I encountered a major setback when the data fetching utility (data_fetch_utils.py) got deleted, so I had to recreate it from scratch. This involved setting up a DataFetchUtils class with functions for logging, ensuring directory existence, and handling data operations with CSV and SQL files."
        },
        {
            "paragraph": "Progress:\n1. Recreated DataFetchUtils:\n   - Implemented a new DataFetchUtils class with methods to set up a logger, ensure directory existence, save data to CSV, save data to SQL, and fetch data from SQL."
        },
        {
            "ordered_list": [
                "Updated DataStore:",
                "Modified the DataStore class to use the new DataFetchUtils class for all data operations.",
                "\nEnsured that all methods in DataStore properly utilize the utility functions provided by DataFetchUtils.\n",
                "\nTest Files:\n",
                "Created initial versions of test files for both DataFetchUtils and DataStore.",
                "\nEncountered and fixed several syntax errors, though the test files still need more work to ensure comprehensive coverage and error-free execution.\n",
                "\nRealization About Config Handling:\n",
                "I just realized that the config_handling.py file is currently empty. This will need to be addressed to manage configuration settings effectively in the project."
            ]
        },
        {
            "paragraph": "Ensured that all methods in DataStore properly utilize the utility functions provided by DataFetchUtils."
        },
        {
            "paragraph": "Test Files:"
        },
        {
            "paragraph": "Encountered and fixed several syntax errors, though the test files still need more work to ensure comprehensive coverage and error-free execution."
        },
        {
            "paragraph": "Realization About Config Handling:"
        },
        {
            "paragraph": "Challenges:\n- Multitasking between my day job and working on this project was tricky. It's funny because it reminded me of sneaking off to smoke weed in the past. Now, I'm sneaking in project work instead.\n- Recreating data_fetch_utils.py from scratch was time-consuming but necessary to get the project back on track."
        },
        {
            "paragraph": "Next Steps:\n- Complete and debug the test files for DataFetchUtils and DataStore to ensure all functionalities are thoroughly tested and working correctly.\n- Run the tests to validate the implementations and make any necessary adjustments based on the test results.\n- Address the empty config_handling.py file to manage configuration settings properly.\n- Continue modularizing and refining the project for better organization and maintainability."
        },
        {
            "paragraph": "Reflection:\nDespite the challenges, I'm making steady progress. Rebuilding the data fetching utility was a significant step forward, and once the test files are complete, I’ll have more confidence in the robustness of my code. The multitasking aspect adds a layer of complexity, but it's also a reminder of how far I've come in terms of prioritizing productive and meaningful work."
        },
        {
            "paragraph": "Opportunity:\nAdditionally, I have a job opportunity to train models with the company Outlier AI. This is an exciting prospect that aligns well with my current work and career goals."
        },
        {
            "paragraph": "Project Structure:\nHere's the current structure of my project:"
        },
        {
            "paragraph": "C:\\TheTradingRobotPlug\n├── data\n│   └── csv\n├── Documents\n│   ├── Explanations\n│   ├── Journal\n│   │   ├── entry 1- 07-3-2024\n│   │   └── entry 2 07-6-2024\n│   └── Resume Stuff\n│       └── data_fetch_skills\n├── logs\n│   ├── data_fetch_utils.log\n│   └── data_store.log\n├── Scripts\n│   ├── __pycache__\n│   ├── Data_Fetch\n│   │   ├── __pycache__\n│   │   ├── data\n│   │   ├── __init__.py\n│   │   ├── alpha_vantage_df.py\n│   │   └── nasdaq.py\n│   │   └── polygon_io.py\n│   ├── powershells\n│   └── Utilities\n│       ├── __pycache__\n│       ├── __init__.py\n│       ├── config_handling.py\n│       ├── data_fetch_utils.py\n│       └── data_store.py\n│   ├── __init__.py\n├── Tests\n│   ├── Data_Fetch\n│   │   ├── __pycache__\n│   │   ├── __init__.py\n│   │   ├── test_alpha_vantage_df.py\n│   │   └── test_polygon_io.py\n│   ├── mock_csv_dir\n│   └── Utilities\n│       ├── test_config_handling.py\n│       ├── test_data_fetch_utils.py\n│       └── test_data_store.py\n│   ├── __init__.py\n│   └── run_tests.py\n├── .env\n├── .gitignore\n└── config.ini"
        },
        {
            "paragraph": "---- 3:38 pm -----"
        },
        {
            "heading": "Journal Entry"
        },
        {
            "paragraph": "Date: July 6, 2024 (continued)"
        },
        {
            "paragraph": "Summary:\nSince the last update, I have focused on creating a project document, resolving import errors, and updating the file structure documentation. These steps were essential to ensure the project is well-documented and all components are functioning correctly."
        },
        {
            "paragraph": "Progress:"
        },
        {
            "ordered_list": [
                "Resolved Import Errors:",
                "\nAt 3:27 am, I successfully resolved import errors in the test files, allowing the tests to run without issues.\n",
                "\nCreated Project Document:\n",
                "Developed a comprehensive project document detailing the project's goals, recent work, and future plans.",
                "\nThe document includes a summary of the work done, the project's structure, and the next steps.\n",
                "\nUpdated File Structure Documentation:\n",
                "Documented the current file structure at 3:36 pm, capturing the state of the project as accurately as possible given my multitasking across two jobs."
            ]
        },
        {
            "paragraph": "At 3:27 am, I successfully resolved import errors in the test files, allowing the tests to run without issues."
        },
        {
            "paragraph": "Created Project Document:"
        },
        {
            "paragraph": "The document includes a summary of the work done, the project's structure, and the next steps."
        },
        {
            "paragraph": "Updated File Structure Documentation:"
        },
        {
            "paragraph": "Challenges:\n- Documenting the file structure while working two jobs was challenging, but I managed to capture the necessary details.\n- Ensuring all test files had the correct imports and paths required careful attention to detail."
        },
        {
            "paragraph": "Next Steps:\n- Complete and debug the test files for nasdaq.py and alpha_vantage.py to ensure all functionalities are thoroughly tested and working correctly.\n- Develop a comprehensive data fetch GUI.\n- Create a main file that integrates all data fetch features.\n- Continue refining and modularizing the project for better organization and maintainability.\n- Prepare for the job opportunity with Outlier AI, leveraging the work done on this project as part of my portfolio."
        },
        {
            "paragraph": "Reflection:\nThe progress made today, particularly resolving the import errors and creating the project documentation, marks a significant step forward. It reinforces the importance of documentation and testing in maintaining a robust and well-organized project. Multitasking remains a challenge, but it’s also a reminder of my commitment to both my professional responsibilities and personal projects."
        },
        {
            "paragraph": "Updated Project Structure:"
        },
        {
            "paragraph": "C:\\TheTradingRobotPlug\n├── data\n│   └── csv\n├── Documents\n│   ├── Explanations\n│   ├── Journal\n│   │   ├── entry 1- 07-3-2024\n│   │   └── entry 2 07-6-2024\n│   ├── Project Documentation\n│   │   └── project_documentation.md\n│   └── Resume Stuff\n│       └── data_fetch_skills\n├── logs\n│   ├── data_fetch_utils.log\n│   └── data_store.log\n├── Scripts\n│   ├── __pycache__\n│   ├── Data_Fetch\n│   │   ├── __pycache__\n│   │   ├── data\n│   │   ├── __init__.py\n│   │   ├── alpha_vantage_df.py\n│   │   ├── API_interaction.py\n│   │   ├── nasdaq.py\n│   │   └── polygon_io.py\n│   ├── powershells\n│   │   ├── __init__.py\n│   │   └── quick.ps1\n│   └── Utilities\n│       ├── __pycache__\n│       ├── __init__.py\n│       ├── config_handling.py\n│       ├── data_fetch_utils.py\n│       └── data_store.py\n│   ├── __init__.py\n├── Tests\n│   ├── Data_Fetch\n│   │   ├── __pycache__\n│   │   ├── __init__.py\n│   │   ├── test_alpha_vantage_df.py\n│   │   └── test_polygon_io.py\n│   ├── mock_csv_dir\n│   └── Utilities\n│       ├── test_config_handling.py\n│       ├── test_data_fetch_utils.py\n│       ├── test_data_store.py\n│   ├── __init__.py\n│   └── run_tests.py\n├── .env\n├── .gitignore\n└── config.ini"
        },
        {
            "paragraph": "This detailed structure helps me keep track of where everything is and ensures that I maintain organization as I continue to develop and refine my project."
        },
        {
            "heading": "Skills Demonstrated Today"
        },
        {
            "ordered_list": [
                "Problem-Solving:",
                "Addressed and resolved import errors in test files, ensuring they ran correctly.",
                "\nRebuilt the data_fetch_utils.py from scratch after it was accidentally deleted, showing resilience and resourcefulness.\n",
                "\nProgramming and Scripting:\n",
                "Implemented the DataFetchUtils class with various data handling and logging methods.",
                "Updated the DataStore class to integrate the new utility functions.",
                "Developed a basic ConfigManager for handling configuration settings.",
                "\nCreated and debugged test scripts for various components (DataFetchUtils, DataStore, ConfigManager).\n",
                "\nTesting and Debugging:\n",
                "Created and executed test scripts to ensure the functionality of newly implemented and existing components.",
                "Fixed syntax errors and path issues in the test files.",
                "\nProperly handled logger shutdown to avoid permission errors during test cleanup.\n",
                "\nDocumentation:\n",
                "Developed a comprehensive project document that includes the project's goals, recent work, future plans, and current file structure.",
                "\nDocumented the file structure and captured the state of the project accurately.\n",
                "\nGit and Version Control:\n",
                "Used Git to commit changes with descriptive messages.",
                "\nManaged branch issues and pushed changes to the remote repository.\n",
                "\nTime Management and Multitasking:\n",
                "Successfully managed to work on the project while fulfilling responsibilities at two jobs.",
                "\nEfficiently prioritized tasks to make significant progress on the project despite time constraints.\n",
                "\nAttention to Detail:\n",
                "Ensured that all test files had the correct imports and paths.",
                "Carefully documented the file structure and maintained organization within the project."
            ]
        },
        {
            "paragraph": "Rebuilt the data_fetch_utils.py from scratch after it was accidentally deleted, showing resilience and resourcefulness."
        },
        {
            "paragraph": "Programming and Scripting:"
        },
        {
            "paragraph": "Created and debugged test scripts for various components (DataFetchUtils, DataStore, ConfigManager)."
        },
        {
            "paragraph": "Testing and Debugging:"
        },
        {
            "paragraph": "Properly handled logger shutdown to avoid permission errors during test cleanup."
        },
        {
            "paragraph": "Documentation:"
        },
        {
            "paragraph": "Documented the file structure and captured the state of the project accurately."
        },
        {
            "paragraph": "Git and Version Control:"
        },
        {
            "paragraph": "Managed branch issues and pushed changes to the remote repository."
        },
        {
            "paragraph": "Time Management and Multitasking:"
        },
        {
            "paragraph": "Efficiently prioritized tasks to make significant progress on the project despite time constraints."
        },
        {
            "paragraph": "Attention to Detail:"
        },
        {
            "paragraph": "These skills collectively demonstrate a strong ability to manage complex projects, resolve issues, and maintain a high level of organization and documentation, all while balancing multiple responsibilities."
        },
        {
            "heading": "Journal Entry - July 6, 2024"
        },
        {
            "paragraph": "Time Spent: 2-00pm -6pm"
        },
        {
            "paragraph": "Accomplishments:"
        },
        {
            "paragraph": "Today was a productive session where significant progress was made on the TheTradingRobotPlug project. Here’s a detailed recap of what was achieved:"
        },
        {
            "ordered_list": [
                "Directory Structure and Files:",
                "Created and organized the project's directory structure, ensuring that all necessary files and folders are in place. This includes setting up directories for data storage, logs, scripts, tests, and documentation."
            ]
        },
        {
            "paragraph": "TheTradingRobotPlug/\n├── .env                          # Environment variables for API keys and configuration\n├── .gitignore                    # Git ignore file to exclude certain files and directories from version control\n├── config.ini                    # Configuration file for project settings\n├── data/\n│   ├── csv/\n│   │   └── AAPL_data.csv         # CSV files storing fetched data for different stocks\n│   ├── nasdaq/                   # Directory for storing NASDAQ fetched data\n│   ├── polygon/                  # Directory for storing Polygon fetched data\n│   └── trading_data.db           # SQLite database for storing trading data\n├── Documents/\n│   ├── Explanations/             # Directory for explanation documents\n│   ├── Journal/\n│   │   ├── entry 1-07-3-2024     # Journal entry for July 3, 2024\n│   │   └── entry 2-07-6-2024     # Journal entry for July 6, 2024\n│   ├── Project Documentation/\n│   │   └── project_documentation.md # Markdown file for project documentation\n│   └── Resume Stuff/\n│       └── data_fetch_skills     # Documentation on data fetching skills for resume\n├── logs/\n│   ├── alpha_vantage.log         # Log file for Alpha Vantage data fetching\n│   ├── data_fetch_utils.log      # Log file for data fetch utilities\n│   ├── data_store.log            # Log file for data storage operations\n│   ├── nasdaq.log                # Log file for NASDAQ data fetching\n│   └── polygon_data_fetcher.log  # Log file for Polygon data fetching\n├── Scrap/\n│   ├── data_fetch_scrap/\n│   │   ├── alpha_vantage_df.py   # Scrapped Alpha Vantage data fetch script\n│   │   ├── nasdaq.py             # Scrapped NASDAQ data fetch script\n│   │   ├── polygon_io.py         # Scrapped Polygon data fetch script\n│   │   ├── test_alpha_vantage_df.py # Test script for Alpha Vantage data fetch\n│   │   └── test_polygon_io.py    # Test script for Polygon data fetch\n├── Scripts/\n│   ├── __pycache__/              # Directory for Python cache files\n│   ├── Data_Fetch/\n│   │   ├── __init__.py           # Init file for Data Fetch module\n│   │   ├── data/                 # Directory for storing fetched data\n│   │   ├── data_fetcher.py       # Main script for fetching data from various sources\n│   │   └── API_interaction.py    # Script for interacting with APIs\n│   ├── Utilities/\n│   │   ├── __init__.py           # Init file for Utilities module\n│   │   ├── config_handling.py    # Script for handling configuration settings\n│   │   ├── data_fetch_utils.py   # Utility functions for data fetching\n│   │   └── data_store.py         # Utility functions for data storage\n│   └── __init__.py               # Init file for Scripts module\n├── Tests/\n│   ├── __pycache__/              # Directory for Python cache files\n│   ├── Data_Fetch/\n│   │   ├── __init__.py           # Init file for Data Fetch tests\n│   │   └── test_data_fetcher.py  # Test script for data fetching functionality\n│   ├── Utilities/                # Directory for utility tests\n│   ├── mock_csv_dir/             # Directory for mock CSV files used in tests\n│   └── run_tests.py              # Script to run all tests"
        },
        {
            "ordered_list": [
                "Data Fetching Enhancements:",
                "Updated the main data fetching script (data_fetcher.py) to improve logging, error handling, and ensure compatibility with various APIs (Alpha Vantage, Nasdaq, Polygon). This involved refining the URL construction and result extraction methods.",
                "Introduced enhanced logging that includes the source of the data being fetched, making it easier to debug and understand where each piece of data originates.",
                "\nFixed issues related to fetching and filtering data by ensuring the DataFrame index is sorted correctly.\n",
                "\nError Handling and Logging:\n",
                "Improved error messages for better clarity. For instance, the error logs now clearly indicate which API caused the error and provide a more detailed description of the error.",
                "\nAdded debug logs to trace the flow of data fetching and pinpoint where potential issues may arise.\n",
                "\nTesting and Debugging:\n",
                "Ran tests using the updated test_data_fetcher.py script to ensure that data fetching and saving mechanisms work correctly.",
                "Fixed several issues related to incorrect data fetching, specifically addressing problems with non-monotonic DatetimeIndexes and handling 404 errors from the Nasdaq API."
            ]
        },
        {
            "paragraph": "Fixed issues related to fetching and filtering data by ensuring the DataFrame index is sorted correctly."
        },
        {
            "paragraph": "Error Handling and Logging:"
        },
        {
            "paragraph": "Added debug logs to trace the flow of data fetching and pinpoint where potential issues may arise."
        },
        {
            "paragraph": "Testing and Debugging:"
        },
        {
            "paragraph": "Next Steps:\n- Further refine and optimize the data fetching scripts to handle edge cases and improve reliability.\n- Continue building out test cases to cover more scenarios and ensure robustness.\n- Begin working on integrating the data fetching capabilities into the main application logic.\n- Document the changes and updates made during this session in the project documentation."
        },
        {
            "paragraph": "Challenges:\n- Encountered issues with the Nasdaq API returning 404 errors. Need to verify the API endpoints and access credentials.\n- Ensuring that data filtering works correctly with sorted indexes was a bit challenging but resolved successfully."
        },
        {
            "paragraph": "Overall, today’s session was highly productive, laying a strong foundation for further development and testing of the TheTradingRobotPlug project."
        }
    ]
}